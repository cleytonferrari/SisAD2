SET SQL DIALECT 3;

/* CREATE DATABASE 'C:\SisAD2\Dados\SISAD2.GDB' PAGE_SIZE 4096

 DEFAULT CHARACTER SET NONE */

/* Table: AD, Owner: SYSDBA */

CREATE TABLE "AD" 
(
  "AD_ID"	 INTEGER NOT NULL,
  "ITENSFICHA_ID"	 INTEGER,
  "NUMEROAD"	 VARCHAR(8),
  "SERVICOMATERIAL"	 VARCHAR(11),
  "EXPOSICAOMOTIVOS"	 VARCHAR(255),
  "VALORTOTAL"	 DECIMAL(10,2),
  "FONTERECURSO"	 VARCHAR(20),
  "VALORORCAMENTODISPONIVEL"	 DECIMAL(10,2),
  "VALORSALDOORCAMENTARIO"	 DECIMAL(10,2),
  "FICHA_ID"	 INTEGER,
  "DATA"	 DATE,
  "SECRETARIASMUNICIPAIS_ID"	 INTEGER,
  "NUMEROPROCESSO"	 VARCHAR(10),
 PRIMARY KEY ("AD_ID")
);

/* Table: ANULACAOAD, Owner: SYSDBA */

CREATE TABLE "ANULACAOAD" 
(
  "ANULACAOAD_ID"	 INTEGER NOT NULL,
  "DATA"	 DATE,
  "PARCIALTOTAL"	 VARCHAR(10),
  "VALORPARCIAL"	 DECIMAL(10,2),
  "AD_ID"	 INTEGER,
  "ITENSFICHA_ID"	 INTEGER,
 PRIMARY KEY ("ANULACAOAD_ID")
);

/* Table: DECRETO, Owner: SYSDBA */

CREATE TABLE "DECRETO" 
(
  "DECRETO_ID"	 VARCHAR(9) NOT NULL,
  "DATA"	 DATE,
  "AN_EX"	 VARCHAR(2),
  "SU_CE"	 VARCHAR(2),
 PRIMARY KEY ("DECRETO_ID")
);

/* Table: EXECUTIVOMUNICIPAL, Owner: SYSDBA */

CREATE TABLE "EXECUTIVOMUNICIPAL" 
(
  "EXECUTIVOMUNICIPAL_ID"	 INTEGER NOT NULL,
  "NOMEPREFEITO"	 VARCHAR(50),
  "MANDATOINICIO"	 DATE,
  "MANDATOFIM"	 DATE,
  "MUNICIPIO"	 VARCHAR(50),
  "UF"	 VARCHAR(2),
 PRIMARY KEY ("EXECUTIVOMUNICIPAL_ID")
);

/* Table: FICHA, Owner: SYSDBA */

CREATE TABLE "FICHA" 
(
  "FICHA_ID"	 INTEGER NOT NULL,
  "SECRETARIASMUNICIPAIS_ID"	 INTEGER,
  "NUMEROFICHA"	 VARCHAR(3),
  "PROJETOATIVIDADE"	 VARCHAR(20),
  "ELEMENTODESPESA"	 VARCHAR(15),
  "VALORTOTALPROCESSO"	 DECIMAL(10,2),
  "VALORTOTALANULACAO"	 DECIMAL(10,2),
  "VALORTOTALSUPLEMENTACAO"	 DECIMAL(10,2),
  "DOTACAOINICIAL"	 DECIMAL(10,2) NOT NULL,
 PRIMARY KEY ("FICHA_ID")
);

/* Table: ITENSAD, Owner: SYSDBA */

CREATE TABLE "ITENSAD" 
(
  "ITENSAD_ID"	 INTEGER NOT NULL,
  "AD_ID"	 INTEGER,
  "NUMEROITEM"	 INTEGER,
  "UND"	 VARCHAR(5),
  "QUANT"	 DECIMAL(10,2),
  "ESPECIFICACAO"	 VARCHAR(255),
  "VALORUNIT"	 DECIMAL(10,2),
  "VALORTOTALITENS"	 COMPUTED BY (QUANT * VALORUNIT),
 PRIMARY KEY ("ITENSAD_ID")
);

/* Table: ITENSFICHA, Owner: SYSDBA */

CREATE TABLE "ITENSFICHA" 
(
  "ITENSFICHA_ID"	 INTEGER NOT NULL,
  "FICHA_ID"	 INTEGER,
  "VALORANULACAO"	 DECIMAL(10,2),
  "VALORSUPLEMENTACAO"	 DECIMAL(10,2),
  "SALDOATUALDOTACAOINICIAL"	 DECIMAL(10,2),
  "VALORPROCESSO"	 DECIMAL(10,2),
  "DATA"	 DATE,
  "NUMEROAD"	 VARCHAR(8),
  "NUMPROCESSO"	 VARCHAR(9),
  "NUMDECRETO"	 VARCHAR(9),
  "NUMANULACAO"	 VARCHAR(9),
 PRIMARY KEY ("ITENSFICHA_ID")
);

/* Table: ITENS_DEC_CREDITO, Owner: SYSDBA */

CREATE TABLE "ITENS_DEC_CREDITO" 
(
  "ITENS_DEC_CREDITO_ID"	 INTEGER NOT NULL,
  "FICHA"	 INTEGER,
  "VALOR"	 DECIMAL(10,2),
  "DECRETO_ID"	 VARCHAR(9) NOT NULL,
 PRIMARY KEY ("ITENS_DEC_CREDITO_ID")
);

/* Table: ITENS_DEC_RECURSO, Owner: SYSDBA */

CREATE TABLE "ITENS_DEC_RECURSO" 
(
  "ITENS_DEC_RECURSO_ID"	 INTEGER NOT NULL,
  "FICHA"	 INTEGER,
  "VALOR"	 DECIMAL(10,2),
  "DECRETO_ID"	 VARCHAR(9) NOT NULL,
 PRIMARY KEY ("ITENS_DEC_RECURSO_ID")
);

/* Table: SECRETARIASMUNICIPAIS, Owner: SYSDBA */

CREATE TABLE "SECRETARIASMUNICIPAIS" 
(
  "SECRETARIASMUNICIPAIS_ID"	 INTEGER NOT NULL,
  "NOMESECRETARIA"	 VARCHAR(75),
  "NOMESECRETARIO"	 VARCHAR(50),
  "PORTARIA"	 VARCHAR(15),
 PRIMARY KEY ("SECRETARIASMUNICIPAIS_ID")
);

/* Table: USUARIOS, Owner: SYSDBA */

CREATE TABLE "USUARIOS" 
(
  "USUARIO_ID"	 INTEGER NOT NULL,
  "NOME"	 VARCHAR(20),
  "SENHA"	 VARCHAR(8),
 PRIMARY KEY ("USUARIO_ID")
);

/*  Index definitions for all user tables */

CREATE UNIQUE INDEX "XPKANULACAOAD" ON "ANULACAOAD"("ANULACAOAD_ID");
ALTER TABLE "AD" ADD FOREIGN KEY ("ITENSFICHA_ID") REFERENCES "ITENSFICHA" ("ITENSFICHA_ID");
ALTER TABLE "ANULACAOAD" ADD FOREIGN KEY ("ITENSFICHA_ID") REFERENCES "ITENSFICHA" ("ITENSFICHA_ID");
ALTER TABLE "ANULACAOAD" ADD FOREIGN KEY ("AD_ID") REFERENCES "AD" ("AD_ID");
ALTER TABLE "FICHA" ADD FOREIGN KEY ("SECRETARIASMUNICIPAIS_ID") REFERENCES "SECRETARIASMUNICIPAIS" ("SECRETARIASMUNICIPAIS_ID");
ALTER TABLE "ITENSAD" ADD FOREIGN KEY ("AD_ID") REFERENCES "AD" ("AD_ID");
ALTER TABLE "ITENSFICHA" ADD FOREIGN KEY ("FICHA_ID") REFERENCES "FICHA" ("FICHA_ID");
ALTER TABLE "ITENS_DEC_CREDITO" ADD FOREIGN KEY ("DECRETO_ID") REFERENCES "DECRETO" ("DECRETO_ID");
ALTER TABLE "ITENS_DEC_RECURSO" ADD FOREIGN KEY ("DECRETO_ID") REFERENCES "DECRETO" ("DECRETO_ID");

CREATE GENERATOR "GN_USUARIO_ID";

/* View: PESQUISAFICHA, Owner: SYSDBA */

CREATE VIEW "PESQUISAFICHA" (
  "FICHA_ID", 
  "NUMEROFICHA", 
  "PROJETOATIVIDADE", 
  "ELEMENTODESPESA", 
  "NOMESECRETARIA"
) AS

SELECT Ficha.Ficha_ID, Ficha.NumeroFicha,
       Ficha.ProjetoAtividade, Ficha.ElementoDespesa,
       SecretariasMunicipais.NomeSecretaria
FROM Ficha, SecretariasMunicipais
     WHERE FICHA.SECRETARIASMUNICIPAIS_ID =
           SECRETARIASMUNICIPAIS.SECRETARIASMUNICIPAIS_ID
;

/* View: PESQUISAFICHAAD, Owner: SYSDBA */

CREATE VIEW "PESQUISAFICHAAD" (
  "FICHA_ID", 
  "NOMESECRETARIA"
) AS

	SELECT Ficha.Ficha_ID, SecretariasMunicipais.NomeSecretaria
	FROM Ficha, SecretariasMunicipais
	WHERE ficha.secretariasmunicipais_id = secretariasmunicipais.secretariasmunicipais_id
;

/* View: CALCULASALDOATUAL, Owner: SYSDBA */

CREATE VIEW "CALCULASALDOATUAL" (
  "VALORTOTALSUPLEMENTACAO", 
  "VALORPROCESSO", 
  "VALORANULACAO", 
  "VALORSUPLEMENTACAO", 
  "SALDOATUALDOTACAOINICIAL", 
  "FICHA_ID", 
  "DATA"
) AS

	SELECT Ficha.ValorTotalSuplementacao,
  ItensFicha.ValorProcesso,
  ItensFicha.ValorAnulacao,
  ItensFicha.ValorSuplementacao,
  ItensFicha.SaldoAtualDotacaoInicial,
  ItensFicha.Ficha_ID,
  ItensFicha.Data
	FROM Ficha, ItensFicha
	WHERE (ficha.ficha_id = itensficha.ficha_id)
;
ALTER TABLE "EXECUTIVOMUNICIPAL" ADD
	CONSTRAINT "CC_DATA" 
CHECK (MANDATOINICIO < MANDATOFIM);


/*  Exceptions */

CREATE EXCEPTION "EXP_DEL_RESTRICT" 'Impossível Excluir entidade mestre quando a mesma possui detalhes';
CREATE EXCEPTION "EXP_INS_RESTRICT" 'Impossível Inserir entidade detalhes sem ter um mestre cadastrado';
CREATE EXCEPTION "EXP_UPD_RESTRICT" 'Impossível Atualizar entidade detalhe sem mestre correspondente';
COMMIT WORK;
SET AUTODDL OFF;
SET TERM ^ ;

/* Stored procedures */

CREATE PROCEDURE "ATUALIZA_FICHA" 
(
  "NFICHA" INTEGER
)
RETURNS
(
  "N" INTEGER
)
AS
BEGIN EXIT; END ^


ALTER PROCEDURE "ATUALIZA_FICHA" 
(
  "NFICHA" INTEGER
)
RETURNS
(
  "N" INTEGER
)
AS
DECLARE VARIABLE TOT DOUBLE PRECISION;
DECLARE VARIABLE STA CHAR(1);
DECLARE VARIABLE SALDOITEM DECIMAL(10,2);
DECLARE VARIABLE SALDOINICIAL DECIMAL (10,2);
DECLARE VARIABLE VPROCESSO DECIMAL (10,2);
DECLARE VARIABLE VANULACAO DECIMAL (10,2);
DECLARE VARIABLE VSUPLEMENTACAO DECIMAL (10,2);
DECLARE VARIABLE SALDOTEMP DECIMAL (10,2);
DECLARE VARIABLE itemid integer;
BEGIN
 SELECT DOTACAOINICIAL FROM FICHA
 WHERE FICHA_ID = :NFICHA
 INTO
   :SALDOINICIAL;
FOR
 SELECT
   ITENSFICHA_ID, SALDOATUALDOTACAOINICIAL, VALORPROCESSO, VALORANULACAO, VALORSUPLEMENTACAO
 FROM
   ITENSFICHA WHERE FICHA_ID = :NFICHA ORDER BY DATA, NUMPROCESSO, NUMDECRETO, NUMEROAD, NUMANULACAO, ITENSFICHA_ID
 INTO
   :ITEMID, :SALDOITEM, :VPROCESSO, :VANULACAO, :VSUPLEMENTACAO
 DO BEGIN
    SALDOTEMP = :SALDOINICIAL - :VPROCESSO - :VANULACAO + :VSUPLEMENTACAO;
    UPDATE ITENSFICHA SET
      SALDOATUALDOTACAOINICIAL = :SALDOTEMP
    WHERE
      FICHA_ID = :NFICHA AND ITENSFICHA_ID = :ITEMID;
    SALDOINICIAL = :SALDOTEMP;
 END
SUSPEND;
END
 ^

SET TERM ; ^
COMMIT WORK;
SET AUTODDL ON;
SET TERM ^ ;


/* Triggers only will work for SQL triggers */

CREATE TRIGGER "AFT_INS_AD" FOR "AD" 
ACTIVE AFTER INSERT POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
DECLARE VARIABLE NNUMEROAD VARCHAR(8);
DECLARE VARIABLE NVALORTOTAL DECIMAL (10,2);
DECLARE VARIABLE NFICHA_ID INTEGER;
DECLARE VARIABLE NDATA DATE;
DECLARE VARIABLE NNUMEROPROCESSO VARCHAR(10);
DECLARE VARIABLE NITENSFICHA_ID INTEGER;
BEGIN
  SELECT COUNT(*)
    FROM
      SECRETARIASMUNICIPAIS
    WHERE
      SECRETARIASMUNICIPAIS_ID = NEW.SECRETARIASMUNICIPAIS_ID
    INTO :TUPLAS;
    IF (:TUPLAS = 0 ) THEN
    BEGIN
      EXCEPTION EXP_INS_RESTRICT;
    END
  SELECT COUNT(*)
    FROM
      FICHA
    WHERE
      FICHA_ID = NEW.FICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS = 0 ) THEN
    BEGIN
      EXCEPTION EXP_INS_RESTRICT;
    END
    SELECT NUMEROAD, VALORTOTAL, FICHA_ID, DATA, NUMEROPROCESSO FROM AD
    WHERE
      AD_ID = NEW.AD_ID
    INTO :NNUMEROAD, :NVALORTOTAL, :NFICHA_ID, :NDATA, :NNUMEROPROCESSO;
    SELECT MAX(ITENSFICHA_ID) FROM ITENSFICHA
    INTO :NITENSFICHA_ID;
   INSERT INTO ITENSFICHA(ITENSFICHA_ID, FICHA_ID, VALORANULACAO, VALORSUPLEMENTACAO, VALORPROCESSO, DATA, NUMEROAD)
   VALUES ((:NITENSFICHA_ID+1), :NFICHA_ID, 0, 0, :NVALORTOTAL, :NDATA, :NNUMEROAD);
   UPDATE AD SET ITENSFICHA_ID = (:NITENSFICHA_ID+1)
   WHERE
     AD_ID = NEW.AD_ID;
END
 ^

CREATE TRIGGER "AFT_UPD_AD" FOR "AD" 
ACTIVE AFTER UPDATE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
DECLARE VARIABLE NNUMEROAD VARCHAR(8);
DECLARE VARIABLE NVALORTOTAL DECIMAL (10,2);
DECLARE VARIABLE NFICHA_ID INTEGER;
DECLARE VARIABLE NDATA DATE;
DECLARE VARIABLE NNUMEROPROCESSO VARCHAR(10);
BEGIN
  IF (OLD.FICHA_ID <> NEW.FICHA_ID) THEN
  BEGIN
  SELECT COUNT(*)
    FROM
      FICHA
    WHERE
      FICHA_ID = NEW.FICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS = 0 ) THEN
    BEGIN
      EXCEPTION EXP_UPD_RESTRICT;
    END
  END
  IF (OLD.SECRETARIASMUNICIPAIS_ID <> NEW.SECRETARIASMUNICIPAIS_ID) THEN
  BEGIN
  SELECT COUNT(*)
    FROM
      SECRETARIASMUNICIPAIS
    WHERE
      SECRETARIASMUNICIPAIS_ID = NEW.SECRETARIASMUNICIPAIS_ID
    INTO :TUPLAS;
    IF (:TUPLAS = 0 ) THEN
    BEGIN
      EXCEPTION EXP_UPD_RESTRICT;
    END
  END
  IF (OLD.ITENSFICHA_ID <> NEW.ITENSFICHA_ID) THEN
  BEGIN
  SELECT COUNT(*)
    FROM
      ITENSFICHA
    WHERE
      ITENSFICHA_ID = OLD.ITENSFICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      UPDATE ITENSFICHA SET
      ITENSFICHA_ID = NEW.ITENSFICHA_ID
      WHERE
      ITENSFICHA_ID = OLD.ITENSFICHA_ID;
    END
  END
  IF (OLD.AD_ID <> NEW.AD_ID) THEN
  BEGIN
  SELECT COUNT(*)
    FROM
      ITENSAD
    WHERE
      AD_ID = OLD.AD_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      UPDATE ITENSAD SET
      AD_ID = NEW.AD_ID
      WHERE
      AD_ID = OLD.AD_ID;
    END
  END
    SELECT NUMEROAD, VALORTOTAL, FICHA_ID, DATA, NUMEROPROCESSO FROM AD
    WHERE
      AD_ID = NEW.AD_ID
    INTO :NNUMEROAD, :NVALORTOTAL, :NFICHA_ID, :NDATA, :NNUMEROPROCESSO;
   UPDATE ITENSFICHA SET
   FICHA_ID = :NFICHA_ID,
   VALORANULACAO = 0,
   VALORSUPLEMENTACAO = 0,
   VALORPROCESSO = :NVALORTOTAL,
   DATA = :NDATA,
   NUMEROAD = :NNUMEROAD
   WHERE
     ITENSFICHA_ID = NEW.ITENSFICHA_ID;
END
 ^

CREATE TRIGGER "AFT_DEL_AD" FOR "AD" 
ACTIVE AFTER DELETE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
BEGIN
   DELETE FROM ITENSAD
      WHERE
       AD_ID = OLD.AD_ID;
  SELECT COUNT(*)
    FROM
      ITENSFICHA
    WHERE
      ITENSFICHA_ID = OLD.ITENSFICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS >= 1 ) THEN
    BEGIN
      DELETE FROM ITENSFICHA
      WHERE
       ITENSFICHA_ID = OLD.ITENSFICHA_ID;
    END
END
 ^

CREATE TRIGGER "AFT_INS_ANULACAOAD" FOR "ANULACAOAD" 
ACTIVE AFTER INSERT POSITION 0
AS
DECLARE VARIABLE NAD INTEGER;
DECLARE VARIABLE VALORAD DECIMAL(10,2);
DECLARE VARIABLE NITEM INTEGER;
DECLARE VARIABLE NFICHA_ID INTEGER;
BEGIN
  SELECT AD_ID, FICHA_ID FROM AD WHERE AD_ID = NEW.AD_ID
  INTO :NAD, :NFICHA_ID;
  IF (NEW.PARCIALTOTAL = 'TOTAL') THEN BEGIN
    SELECT VALORTOTAL FROM AD WHERE AD_ID = NEW.AD_ID
    INTO :VALORAD;
  END
  IF (NEW.PARCIALTOTAL = 'PARCIAL') THEN BEGIN
    VALORAD = NEW.VALORPARCIAL;
  END
  SELECT MAX(ITENSFICHA_ID) FROM ITENSFICHA INTO :NITEM;
   INSERT INTO ITENSFICHA(ITENSFICHA_ID, FICHA_ID, VALORANULACAO, VALORSUPLEMENTACAO, VALORPROCESSO, DATA, NUMANULACAO)
   VALUES ((:NITEM+1), :NFICHA_ID, 0, :VALORAD, 0, NEW.DATA, NEW.ANULACAOAD_ID);
   UPDATE ANULACAOAD SET ITENSFICHA_ID = (:NITEM+1)
   WHERE
     ANULACAOAD_ID = NEW.ANULACAOAD_ID;
END
 ^

CREATE TRIGGER "AFT_UPD_ANULACAOAD" FOR "ANULACAOAD" 
ACTIVE AFTER UPDATE POSITION 0
AS
DECLARE VARIABLE NAD INTEGER;
DECLARE VARIABLE VALORAD DECIMAL(10,2);
DECLARE VARIABLE NFICHA_ID INTEGER;
BEGIN
  SELECT AD_ID, FICHA_ID FROM AD WHERE AD_ID = NEW.AD_ID
  INTO :NAD, :NFICHA_ID;
  IF (NEW.PARCIALTOTAL = 'TOTAL') THEN BEGIN
    SELECT VALORTOTAL FROM AD WHERE AD_ID = NEW.AD_ID
    INTO :VALORAD;
  END
  IF (NEW.PARCIALTOTAL = 'PARCIAL') THEN BEGIN
    VALORAD = NEW.VALORPARCIAL;
  END
  UPDATE ITENSFICHA SET
  FICHA_ID = :NFICHA_ID,
  VALORANULACAO = 0,
  VALORSUPLEMENTACAO = :VALORAD,
  VALORPROCESSO = 0,
  DATA = NEW.DATA,
  NUMANULACAO = NEW.ANULACAOAD_ID
  WHERE
   NUMANULACAO = NEW.ANULACAOAD_ID;
END
 ^

CREATE TRIGGER "AFT_DEL_ANULACAOAD" FOR "ANULACAOAD" 
ACTIVE AFTER DELETE POSITION 0
AS
BEGIN
  DELETE FROM ITENSFICHA WHERE
   NUMANULACAO = OLD.ANULACAOAD_ID;
END
 ^

CREATE TRIGGER "AFT_UPD_DECRETO" FOR "DECRETO" 
ACTIVE AFTER UPDATE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
BEGIN
  IF (OLD.DECRETO_ID <> NEW.DECRETO_ID) THEN
  BEGIN
  SELECT COUNT(*)
    FROM
      ITENSFICHA
    WHERE
      NUMDECRETO = OLD.DECRETO_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      UPDATE ITENSFICHA SET
      NUMDECRETO = NEW.DECRETO_ID
      WHERE
      NUMDECRETO = OLD.DECRETO_ID;
    END
  SELECT COUNT(*)
    FROM
      ITENS_DEC_RECURSO
    WHERE
      DECRETO_ID = OLD.DECRETO_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      UPDATE ITENS_DEC_RECURSO SET
      DECRETO_ID = NEW.DECRETO_ID
      WHERE
      DECRETO_ID = OLD.DECRETO_ID;
    END
  SELECT COUNT(*)
    FROM
      ITENS_DEC_CREDITO
    WHERE
      DECRETO_ID = OLD.DECRETO_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      UPDATE ITENS_DEC_CREDITO SET
      DECRETO_ID = NEW.DECRETO_ID
      WHERE
      DECRETO_ID = OLD.DECRETO_ID;
    END
  END
END
 ^

CREATE TRIGGER "AFT_DEL_DECRETO" FOR "DECRETO" 
ACTIVE AFTER DELETE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
BEGIN
  SELECT COUNT(*)
    FROM
      ITENSFICHA
    WHERE
      NUMDECRETO = OLD.DECRETO_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      DELETE FROM ITENSFICHA
      WHERE
       NUMDECRETO = OLD.DECRETO_ID;
    END
  SELECT COUNT(*)
    FROM
      ITENS_DEC_RECURSO
    WHERE
      DECRETO_ID = OLD.DECRETO_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      DELETE FROM ITENS_DEC_RECURSO
      WHERE
       DECRETO_ID = OLD.DECRETO_ID;
    END
  SELECT COUNT(*)
    FROM
      ITENS_DEC_CREDITO
    WHERE
      DECRETO_ID = OLD.DECRETO_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      DELETE FROM ITENS_DEC_CREDITO
      WHERE
       DECRETO_ID = OLD.DECRETO_ID;
    END
END
 ^

CREATE TRIGGER "AFT_INS_FICHA" FOR "FICHA" 
ACTIVE AFTER INSERT POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
BEGIN
  SELECT COUNT(*)
    FROM
      SECRETARIASMUNICIPAIS
    WHERE
      SECRETARIASMUNICIPAIS_ID = NEW.SECRETARIASMUNICIPAIS_ID
    INTO :TUPLAS;
  IF (:TUPLAS = 0 ) THEN
   BEGIN
      EXCEPTION EXP_INS_RESTRICT;
   END
END
 ^

CREATE TRIGGER "AFT_UPD_FICHA" FOR "FICHA" 
ACTIVE AFTER UPDATE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
BEGIN
  IF (OLD.FICHA_ID <> NEW.FICHA_ID) THEN
  BEGIN
  SELECT COUNT(*)
    FROM
      ITENSFICHA
    WHERE
      FICHA_ID = OLD.FICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      UPDATE ITENSFICHA SET
      FICHA_ID = NEW.FICHA_ID
      WHERE
       FICHA_ID = OLD.FICHA_ID;
    END
  SELECT COUNT(*)
    FROM
      AD
    WHERE
      FICHA_ID = OLD.FICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      UPDATE AD SET
        FICHA_ID = NEW.FICHA_ID
      WHERE
        FICHA_ID = OLD.FICHA_ID;
    END
END
END
 ^

CREATE TRIGGER "AFT_DEL_FICHA" FOR "FICHA" 
ACTIVE AFTER DELETE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
BEGIN
  SELECT COUNT(*)
    FROM
      ITENSFICHA
    WHERE
      FICHA_ID = OLD.FICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      EXCEPTION EXP_DEL_RESTRICT;
    END
  SELECT COUNT(*)
    FROM
      AD
    WHERE
      FICHA_ID = OLD.FICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      EXCEPTION EXP_DEL_RESTRICT;
    END
END
 ^

CREATE TRIGGER "AFT_INS_ITENSAD" FOR "ITENSAD" 
ACTIVE AFTER INSERT POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
DECLARE VARIABLE TOTAIS DECIMAL(10,2);
BEGIN
  SELECT COUNT(*)
    FROM
      AD
    WHERE
      AD_ID = NEW.AD_ID
    INTO :TUPLAS;
    IF (:TUPLAS = 0 ) THEN
    BEGIN
      EXCEPTION EXP_INS_RESTRICT;
    END
SELECT
 SUM(VALORTOTALITENS)
 FROM
  ITENSAD
WHERE
  AD_ID = NEW.AD_ID
INTO :TOTAIS;
 UPDATE AD SET
 VALORTOTAL = :TOTAIS
 WHERE
  AD_ID = NEW.AD_ID;
END
 ^

CREATE TRIGGER "AFT_UPD_ITENSAD" FOR "ITENSAD" 
ACTIVE AFTER UPDATE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
DECLARE VARIABLE TOTAIS DECIMAL(10,2);
BEGIN
  SELECT COUNT(*)
    FROM
      AD
    WHERE
      AD_ID = NEW.AD_ID
    INTO :TUPLAS;
    IF (:TUPLAS = 0 ) THEN
    BEGIN
      EXCEPTION EXP_UPD_RESTRICT;
    END
SELECT
 SUM(VALORTOTALITENS)
 FROM
  ITENSAD
WHERE
  AD_ID = NEW.AD_ID
INTO :TOTAIS;
 UPDATE AD SET
 VALORTOTAL = :TOTAIS
 WHERE
  AD_ID = NEW.AD_ID;
END
 ^

CREATE TRIGGER "AFT_DEL_ITENSAD" FOR "ITENSAD" 
ACTIVE AFTER DELETE POSITION 0
AS
DECLARE VARIABLE TOTAIS DECIMAL(10,2);
BEGIN
SELECT
 SUM(VALORTOTALITENS)
 FROM
  ITENSAD
WHERE
  AD_ID = OLD.AD_ID
INTO :TOTAIS;
 UPDATE AD SET
 VALORTOTAL = :TOTAIS
 WHERE
  AD_ID = OLD.AD_ID;
END
 ^

CREATE TRIGGER "AFT_INS_ITENSFICHA" FOR "ITENSFICHA" 
ACTIVE AFTER INSERT POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
BEGIN
  SELECT COUNT(*)
    FROM
      FICHA
    WHERE
      FICHA_ID = NEW.FICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS = 0 ) THEN
    BEGIN
      EXCEPTION EXP_INS_RESTRICT;
    END
   IF ((NEW.NUMDECRETO <> '') AND (NEW.NUMDECRETO <> 'NULL')) THEN
   BEGIN
     SELECT COUNT(*)
     FROM
       DECRETO
     WHERE
       DECRETO_ID = NEW.NUMDECRETO
     INTO :TUPLAS;
     IF (:TUPLAS = 0) THEN
       EXCEPTION EXP_INS_RESTRICT;
   END
END
 ^

CREATE TRIGGER "AFT_UPD_ITENSFICHA" FOR "ITENSFICHA" 
ACTIVE AFTER UPDATE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
BEGIN
  IF (OLD.ITENSFICHA_ID <> NEW.ITENSFICHA_ID) THEN
  BEGIN
  SELECT COUNT(*)
    FROM
      FICHA
    WHERE
      FICHA_ID = NEW.FICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS = 0 ) THEN
    BEGIN
      EXCEPTION EXP_UPD_RESTRICT;
    END
  END
  IF (OLD.ITENSFICHA_ID <> NEW.ITENSFICHA_ID) THEN
  BEGIN
  SELECT COUNT(*)
    FROM
      AD
    WHERE
      ITENSFICHA_ID = OLD.ITENSFICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      UPDATE AD SET
      ITENSFICHA_ID = NEW.ITENSFICHA_ID
      WHERE
       ITENSFICHA_ID = OLD.ITENSFICHA_ID;
    END
  END
   IF ((NEW.NUMDECRETO <> '') AND (NEW.NUMDECRETO <> 'NULL')) THEN
   BEGIN
     SELECT COUNT(*)
     FROM
       DECRETO
     WHERE
       DECRETO_ID = NEW.NUMDECRETO
     INTO :TUPLAS;
     IF (:TUPLAS = 0) THEN
       EXCEPTION EXP_INS_RESTRICT;
   END
END
 ^

CREATE TRIGGER "AFT_DEL_ITENSFICHA" FOR "ITENSFICHA" 
ACTIVE AFTER DELETE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
BEGIN
  SELECT COUNT(*)
    FROM
      AD
    WHERE
      ITENSFICHA_ID = OLD.ITENSFICHA_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      EXCEPTION EXP_DEL_RESTRICT;
    END
END
 ^

CREATE TRIGGER "AFT_INS_ITENS_DEC_CREDITO" FOR "ITENS_DEC_CREDITO" 
ACTIVE AFTER INSERT POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
DECLARE VARIABLE NVALOR DECIMAL(10,2);
DECLARE VARIABLE NFICHA INTEGER;
DECLARE VARIABLE NITENSFICHA_ID INTEGER;
DECLARE VARIABLE NDATA DATE;
DECLARE VARIABLE NSU_CE VARCHAR(2);
DECLARE VARIABLE NDECRETO VARCHAR(9);
BEGIN
 SELECT FICHA, VALOR FROM ITENS_DEC_CREDITO
 WHERE
   ITENS_DEC_CREDITO_ID = NEW.ITENS_DEC_CREDITO_ID
 INTO :NFICHA, :NVALOR;
 SELECT DECRETO_ID, DATA, SU_CE FROM DECRETO
 WHERE
   DECRETO_ID = NEW.DECRETO_ID
 INTO :NDECRETO, :NDATA, :NSU_CE;
 SELECT MAX(ITENSFICHA_ID) FROM ITENSFICHA INTO :NITENSFICHA_ID;
 IF ((:NSU_CE = 'SU') OR (:NSU_CE = 'CE')) THEN BEGIN
   INSERT INTO ITENSFICHA(ITENSFICHA_ID, FICHA_ID, VALORANULACAO, VALORSUPLEMENTACAO, VALORPROCESSO, DATA, NUMDECRETO)
   VALUES ((:NITENSFICHA_ID+1), :NFICHA, 0, :NVALOR, 0, :NDATA, :NDECRETO);
 END
END
 ^

CREATE TRIGGER "AFT_UPD_ITENS_DEC_CREDITO" FOR "ITENS_DEC_CREDITO" 
ACTIVE AFTER UPDATE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
DECLARE VARIABLE NVALOR DECIMAL(10,2);
DECLARE VARIABLE NFICHA INTEGER;
DECLARE VARIABLE NDATA DATE;
DECLARE VARIABLE NSU_CE VARCHAR(2);
DECLARE VARIABLE NDECRETO VARCHAR(9);
BEGIN
 SELECT FICHA, VALOR FROM ITENS_DEC_CREDITO
 WHERE
   ITENS_DEC_CREDITO_ID = NEW.ITENS_DEC_CREDITO_ID
 INTO :NFICHA, :NVALOR;
 SELECT DECRETO_ID, DATA, SU_CE FROM DECRETO
 WHERE
   DECRETO_ID = NEW.DECRETO_ID
 INTO :NDECRETO, :NDATA, :NSU_CE;
 IF ((:NSU_CE = 'SU') OR (:NSU_CE = 'CE')) THEN BEGIN
   UPDATE ITENSFICHA SET
   FICHA_ID = :NFICHA,
   VALORANULACAO = 0,
   VALORSUPLEMENTACAO = :NVALOR,
   VALORPROCESSO = 0,
   DATA = :NDATA,
   NUMDECRETO = :NDECRETO
   WHERE
     NUMDECRETO = :NDECRETO AND FICHA_ID = NEW.FICHA;
 END
END
 ^

CREATE TRIGGER "AFT_DEL_ITENS_DEC_CREDITO" FOR "ITENS_DEC_CREDITO" 
ACTIVE AFTER DELETE POSITION 0
AS
BEGIN
 DELETE FROM ITENSFICHA WHERE NUMDECRETO = OLD.DECRETO_ID AND FICHA_ID = OLD.FICHA;
END
 ^

CREATE TRIGGER "AFT_INS_ITENS_DEC_REC" FOR "ITENS_DEC_RECURSO" 
ACTIVE AFTER INSERT POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
DECLARE VARIABLE NVALOR DECIMAL(10,2);
DECLARE VARIABLE NFICHA INTEGER;
DECLARE VARIABLE NITENSFICHA_ID INTEGER;
DECLARE VARIABLE NDATA DATE;
DECLARE VARIABLE NAN_EX VARCHAR(2);
DECLARE VARIABLE NDECRETO VARCHAR(9);
BEGIN
 SELECT FICHA, VALOR FROM ITENS_DEC_RECURSO
 WHERE
   ITENS_DEC_RECURSO_ID = NEW.ITENS_DEC_RECURSO_ID
 INTO :NFICHA, :NVALOR;
 SELECT DECRETO_ID, DATA, AN_EX FROM DECRETO
 WHERE
   DECRETO_ID = NEW.DECRETO_ID
 INTO :NDECRETO, :NDATA, :NAN_EX;
 SELECT MAX(ITENSFICHA_ID) FROM ITENSFICHA INTO :NITENSFICHA_ID;
 IF (:NAN_EX = 'AN') THEN BEGIN
   INSERT INTO ITENSFICHA(ITENSFICHA_ID, FICHA_ID, VALORANULACAO, VALORSUPLEMENTACAO, VALORPROCESSO, DATA, NUMDECRETO)
   VALUES ((:NITENSFICHA_ID+1), :NFICHA, :NVALOR, 0, 0, :NDATA, :NDECRETO);
 END
END
 ^

CREATE TRIGGER "AFT_UPD_ITENS_DEC_REC" FOR "ITENS_DEC_RECURSO" 
ACTIVE AFTER UPDATE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
DECLARE VARIABLE NVALOR DECIMAL(10,2);
DECLARE VARIABLE NFICHA INTEGER;
DECLARE VARIABLE NDATA DATE;
DECLARE VARIABLE NAN_EX VARCHAR(2);
DECLARE VARIABLE NDECRETO VARCHAR(9);
BEGIN
 SELECT FICHA, VALOR FROM ITENS_DEC_RECURSO
 WHERE
   ITENS_DEC_RECURSO_ID = NEW.ITENS_DEC_RECURSO_ID
 INTO :NFICHA, :NVALOR;
 SELECT DECRETO_ID, DATA, AN_EX FROM DECRETO
 WHERE
   DECRETO_ID = NEW.DECRETO_ID
 INTO :NDECRETO, :NDATA, :NAN_EX;
 IF (:NAN_EX = 'AN') THEN BEGIN
   UPDATE ITENSFICHA SET
   FICHA_ID = :NFICHA,
   VALORANULACAO = :NVALOR,
   VALORSUPLEMENTACAO = 0,
   VALORPROCESSO = 0,
   DATA = :NDATA,
   NUMDECRETO = :NDECRETO
   WHERE
     NUMDECRETO = :NDECRETO AND FICHA_ID = NEW.FICHA;
 END
END
 ^

CREATE TRIGGER "AFT_DEL_ITENS_DEC_REC" FOR "ITENS_DEC_RECURSO" 
ACTIVE AFTER DELETE POSITION 0
AS
BEGIN
 DELETE FROM ITENSFICHA WHERE NUMDECRETO = OLD.DECRETO_ID;
END
 ^

CREATE TRIGGER "AFT_UPD_SECMUNICIPAL" FOR "SECRETARIASMUNICIPAIS" 
ACTIVE AFTER UPDATE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
BEGIN
   IF (OLD.SECRETARIASMUNICIPAIS_ID <> NEW.SECRETARIASMUNICIPAIS_ID) THEN
   BEGIN
    SELECT COUNT(*)
    FROM
      FICHA
    WHERE
      SECRETARIASMUNICIPAIS_ID = OLD.SECRETARIASMUNICIPAIS_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      UPDATE FICHA SET
       SECRETARIASMUNICIPAIS_ID = NEW.SECRETARIASMUNICIPAIS_ID
      WHERE
       SECRETARIASMUNICIPAIS_ID = OLD.SECRETARIASMUNICIPAIS_ID;
    END
   END
   IF (OLD.SECRETARIASMUNICIPAIS_ID <> NEW.SECRETARIASMUNICIPAIS_ID) THEN
   BEGIN
    SELECT COUNT(*)
    FROM
      AD
    WHERE
      SECRETARIASMUNICIPAIS_ID = OLD.SECRETARIASMUNICIPAIS_ID
    INTO :TUPLAS;
    IF (:TUPLAS > 0 ) THEN
    BEGIN
      UPDATE AD SET
       SECRETARIASMUNICIPAIS_ID = NEW.SECRETARIASMUNICIPAIS_ID
      WHERE
       SECRETARIASMUNICIPAIS_ID = OLD.SECRETARIASMUNICIPAIS_ID;
    END
   END
END
 ^

CREATE TRIGGER "AFT_DEL_SECMUNICIPAL" FOR "SECRETARIASMUNICIPAIS" 
ACTIVE AFTER DELETE POSITION 0
AS
DECLARE VARIABLE TUPLAS SMALLINT;
BEGIN
  SELECT COUNT(*)
  FROM
    FICHA
  WHERE
    SECRETARIASMUNICIPAIS_ID = OLD.SECRETARIASMUNICIPAIS_ID
  INTO :TUPLAS;
  IF (:TUPLAS > 0 ) THEN
  BEGIN
    EXCEPTION EXP_DEL_RESTRICT;
  END
  SELECT COUNT(*)
  FROM
    AD
  WHERE
    SECRETARIASMUNICIPAIS_ID = OLD.SECRETARIASMUNICIPAIS_ID
  INTO :TUPLAS;
  IF (:TUPLAS > 0 ) THEN
  BEGIN
    EXCEPTION EXP_DEL_RESTRICT;
  END
END
 ^

COMMIT WORK ^
SET TERM ;^

/* Grant Roles for this database */


/* Grant permissions for this database */
